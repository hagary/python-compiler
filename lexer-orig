import java.util.*;
import java.io.*;

/* semantic value of token returned by scanner */

public class lexer
{
	BufferedReader reader;
	Yylex yy;
	public lexer(String filein) throws FileNotFoundException 
	{
		reader = new BufferedReader(new FileReader(filein));
		yy = new Yylex (reader);
		
	}
	public String getNextToken(String filein) throws IOException
	{
		
		
		return yy.next_token();
	}
	public static void main (String[] args) throws IOException
	{
		BufferedReader reader = new BufferedReader(new FileReader("SCode.java"));
		BufferedWriter writer = new BufferedWriter(new FileWriter("testout.txt"));
		Yylex yy = new Yylex (reader);
		while(true)
		{
			String x =yy.next_token();
			if(x==null)
				break;
			writer.write(x);	
			writer.write('\n');
		}
		reader.close();
		writer.close();
	}
}
%%
%function next_token
%type String

%eofval{
  return null;
%eofval}


KEYWORD=int|void|boolean|double|char|long|String|byte|short
CLASS=class
SYSTEM=System
ALPHA=[A-Za-z]
DIGIT=[0-9]
ALPHA_NUMERIC={ALPHA}|{DIGIT}
NUMBER={DIGIT}+("."{DIGIT}+)(E[+-]?{DIGIT}+)?
INTEGER = {DIGIT}+
WHITE_SPACE=([\ \n\r\t\f\b])+
NOSLASHQUOTE = [^\"]
STRING = \"{NOSLASHQUOTE}*\"
NOSLASHSINGLE = [^\']
CHAR = \'{NOSLASHSINGLE}*\'
ID = {ALPHA}({ALPHA}|{DIGIT})*
COMMENTS=//[^\n]* \n
%%


<YYINITIAL> {WHITE_SPACE} { }
<YYINITIAL> {COMMENTS} { }
<YYINITIAL> {KEYWORD} { 
  return "KW\t"+yytext(); 
}
<YYINITIAL> {CLASS} { 
  return "CL\t"+yytext(); 
}

<YYINITIAL> {SYSTEM} { 
  return "SY\t"+yytext(); 
}


<YYINITIAL> {ID} { 
  return "ID\t"+yytext(); 
}

<YYINITIAL> {NUMBER} { 
  return "DL\t"+yytext(); 
}

<YYINITIAL> {INTEGER} { 
  return "IN\t"+yytext(); 
}

<YYINITIAL> {STRING} { 
  return "ST\t"+yytext(); 
}
<YYINITIAL> {CHAR} { 
  return "CH\t"+yytext(); 
}

<YYINITIAL> "." { 
  return "DO\t."; 
}

<YYINITIAL> "+" { 
  return "PO\t+"; 
}
<YYINITIAL> "-" { 
  return "MO\t-"; 
}
<YYINITIAL> "*" { 
  return "MB\t*"; 
}
<YYINITIAL> "/" { 
  return "DB\t/"; 
}
<YYINITIAL> "=" { 
  return "AO\t="; 
}
<YYINITIAL> "<" { 
  return "LT\t<";  
}
<YYINITIAL> ">" { 
  return "GT\t>"; 
}
<YYINITIAL> "==" { 
  return "EQ\t=="; 
}
<YYINITIAL> "{" { 
  return "LC\t{"; 
}
<YYINITIAL> "}" { 
  return "RC\t}"; 
}
<YYINITIAL> "(" { 
  return "LB\t("; 
}
<YYINITIAL> ")" { 
  return "RB\t)"; 
}
<YYINITIAL> ";" { 
  return "SM\t;"; 
}
<YYINITIAL> "," { 
  return "FA\t,"; 
}

<YYINITIAL> "[]" { 
  return "AA\t[]"; 
}
<YYINITIAL> "[" { 
  return "LS\t["; 
}
<YYINITIAL> "]" { 
  return "RS\t]"; 
}


<YYINITIAL> . { 
  return "Undefined\t"+yytext(); 
}